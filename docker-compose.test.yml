version: '3.9'

services:
  db:
    image: postgres:14.6
    container_name: commery_postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    expose:
      - "5432"
  web:
    build:
      dockerfile: Dockerfile
      context: .
      target: "prod"
    image: commery_docker:prod
    restart: always
    container_name: commery_django
    command: >
      bash -c "./manage.py collectstatic --noinput && ./manage.py migrate && gunicorn --timeout 120 --workers 5 -b 0.0.0.0:8000 config.wsgi:application"
    volumes:
      - static_volume:/commery_project/staticfiles
      - media_volume:/commery_project/media
      - .:/commery_project
      - /var/web_logs:/commery_project/logs
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
  redis:
    image: redis:6.0.17
    container_name: commery_redis
    restart: always
  celery:
    build:
      dockerfile: Dockerfile
      context: .
      target: "prod"
    container_name: commery_celery
    restart: always
    command: celery -A config worker -l info
    volumes:
      - ./:/commery_project/commery_celery
      - /var/web_logs:/commery_project/logs
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web
      - nginx
  celery-beat:
    build:
      dockerfile: Dockerfile
      context: .
      target: "prod"
    container_name: commery_celery_beat
    restart: always
    command: celery -A config beat -l info
    volumes:
      - ./:/commery_project/commery_celery
      - /var/web_logs:/commery_project/logs
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - web
      - nginx
  nginx:
    build:
      dockerfile: ./Dockerfile
      context: ./docker_nginx/nginx_test
    container_name: commery_nginx
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - static_volume:/commery_project/staticfiles
      - media_volume:/commery_project/media
    ports:
      - 80:80
  grafana:
    image: grafana/grafana:8.5.2
    container_name: commery_grafana
    expose:
      - "3000"
    volumes:
      - ./grafana/dashboard.yaml:/etc/grafana/provisioning/datasources/dashboard.yaml
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SERVER_DOMAIN=${GF_SERVER_DOMAIN}
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s:%(http_port)s/grafana/
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    depends_on:
      - loki
      - prometheus
  promtail:
    image: grafana/promtail:2.5.0
    container_name: commery_promtail
    volumes:
      - ./promtail/promtail.yaml:/etc/promtail/promtail.yaml
      - /var/web_logs:/var/log
    command: --config.file=/etc/promtail/promtail.yaml
    depends_on:
      - web
  loki:
    image: grafana/loki:2.5.0
    container_name: commery_loki
    expose:
      - "3100"
    depends_on:
      - promtail
  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: commery_prometheus
    expose:
      - "9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command: --config.file=/etc/prometheus/prometheus.yaml

volumes:
  static_volume:
  media_volume:
  postgres_data:
  grafana_data:
  prometheus_data: